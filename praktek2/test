import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Define the Multi-Layer Perceptron model
def create_mlp(input_dim, hidden_layers, output_dim):
    model = Sequential()
    
    # Input layer and first hidden layer
    model.add(Dense(hidden_layers[0], input_dim=input_dim, activation='relu'))
    
    # Additional hidden layers
    for units in hidden_layers[1:]:
        model.add(Dense(units, activation='relu'))
    
    # Output layer
    model.add(Dense(output_dim, activation='softmax'))
    
    return model

# Example usage
if __name__ == "__main__":
    input_dim = 20  # Number of input features
    hidden_layers = [64, 32, 16]  # Number of neurons in each hidden layer
    output_dim = 10  # Number of output classes

    model = create_mlp(input_dim, hidden_layers, output_dim)
    model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
    model.summary()